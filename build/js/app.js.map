{"version":3,"sources":["app.js"],"names":["Cotizacion","[object Object]","nombre","precio_compra","precio_venta","variacion","this","precio","Cotizaciones","cotizaciones","find","c","cotizacion","push","async","obtenerPrecios","res","fetch","json","error","console","log","procesadarDatos","datos","x","casa","formatearPrecio","compra","venta","agregarCotizacion","precioFormateado","replace","Number","isNaN","darkMode","window","matchMedia","matches","document","querySelector","classList","add","addEventListener","contains","toggle","calculadora","errores","cantidad","value","parseInt","opcionSeleccionada","selectedIndex","textContent","split","length","resultado","operacion","conteResultado","style","display","eliminarResultado","options","selected","setTimeout","contenedorErrores","i","p","createElement","appendChild","eliminarErrores","innerHTML","comprobarNombres","mostrarDatos","obtenerCotizaciones","filter","forEach","element","index","bloque","titulo","contenido","precioCompra","precioVenta","id","toLowerCase"],"mappings":"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","file":"app.js","sourcesContent":["class Cotizacion {\r\n\r\n    nombre = \"\";\r\n    precio_compra = 0;\r\n    precio_venta = 0;\r\n    variacion = 0;\r\n\r\n    constructor(nombre, precio_compra, precio_venta, variacion) {\r\n        this.nombre = nombre;\r\n        this.precio_compra = precio_compra;\r\n        this.precio_venta = precio_venta;\r\n        this.variacion = variacion;\r\n    }\r\n\r\n    get nombre() {\r\n        return this.nombre;\r\n    }\r\n\r\n    get precio_compra() {\r\n        return this.precio_compra;\r\n    }\r\n\r\n    get precio_venta() {\r\n        return this.precio_venta;\r\n    }\r\n\r\n    get variacion() {\r\n        return this.variacion;\r\n    }\r\n\r\n    set precio_compra(precio) {\r\n        this.precio_compra = precio;\r\n    }\r\n\r\n    set precio_venta(precio) {\r\n        this.precio_venta = precio;\r\n    }\r\n\r\n    set variacion(variacion) {\r\n        this.variacion = variacion;\r\n    }\r\n}\r\n\r\nclass Cotizaciones {\r\n    cotizaciones = [];\r\n\r\n    obtenerCotizacion(nombre) {\r\n        return this.cotizaciones.find(c => c.nombre === nombre);\r\n    }\r\n\r\n    agregarCotizacion(cotizacion) {\r\n        this.cotizaciones.push(cotizacion);\r\n    }\r\n\r\n    obtenerCotizaciones() {\r\n        return this.cotizaciones;\r\n    }\r\n}\r\n\r\nconst cotizaciones = new Cotizaciones();\r\n\r\nasync function obtenerPrecios() {\r\n    const url = 'https://www.dolarsi.com/api/api.php?type=valoresprincipales';\r\n    try {\r\n        let res = await fetch(url);\r\n        let datos = await res.json();\r\n        return datos;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function procesadarDatos(cotizaciones) {\r\n    try {\r\n        const datos = await obtenerPrecios();\r\n        for(x of datos) {\r\n\r\n            const nombre = x.casa.nombre;\r\n            const precio_compra = formatearPrecio(x.casa.compra);\r\n            const precio_venta = formatearPrecio(x.casa.venta);\r\n            const variacion = formatearPrecio(x.casa.variacion);\r\n            cotizacion = new Cotizacion(nombre, precio_compra, precio_venta, variacion);\r\n            cotizaciones.agregarCotizacion(cotizacion);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    console.log('datos cargados');\r\n}\r\n\r\nfunction formatearPrecio(precio) {\r\n    precio = precio.replace(\".\", \"\");\r\n    precio = precio.replace(\",\", \".\");\r\n    precio = Number(precio);\r\n\r\n    let precioFormateado;\r\n    \r\n    if(isNaN(precio)) {\r\n        precioFormateado = \"No cotiza\";\r\n    } else {\r\n        precioFormateado = precio;\r\n    }\r\n \r\n    return precioFormateado;\r\n}\r\n\r\nfunction darkMode() {\r\n\r\n    const prefersDarkMode = window.matchMedia(\"(prefers-color-scheme:dark)\").matches;\r\n    if(prefersDarkMode) {\r\n        document.querySelector('body').classList.add('darkmode');\r\n    }\r\n    \r\n    const icono = document.querySelector('.darkmode__icon');\r\n    icono.addEventListener('click', () => { \r\n\r\n        const darkmode = document.querySelector('body').classList.contains('darkmode');\r\n        if(darkMode) {\r\n            document.querySelector('body').classList.toggle('darkmode');\r\n        } else {\r\n            document.querySelector('body').classList.toggle('darkmode');          \r\n        }\r\n    });\r\n}\r\n\r\nfunction calculadora() {\r\n    const btn = document.querySelector('.btn-calculadora');\r\n    btn.addEventListener('click', ()=> {\r\n        const errores = [];\r\n        let cantidad = document.querySelector('#moneda').value;\r\n        if(cantidad === \"\") {\r\n            errores.push('Debes introducir una cantidad');\r\n        } else {\r\n            cantidad = parseInt(document.querySelector('#moneda').value);\r\n            if(cantidad <= 0) {\r\n                errores.push('Debes introducir un cantidad mayor a 0');                \r\n            }\r\n        }\r\n        const opcionSeleccionada = parseInt(document.querySelector('#convertidorOpciones').selectedIndex);\r\n        const precio = parseInt(document.querySelector('#dolarblue').textContent.split('$')[1]);\r\n        if(opcionSeleccionada === 0) {\r\n            errores.push('Selecciona una opcion valida');\r\n        }\r\n        if(errores.length === 0) {\r\n            const resultado = document.querySelector('#resultado_total');\r\n            let operacion = 0;\r\n            if(opcionSeleccionada === 1) {\r\n                operacion = cantidad / precio;\r\n                resultado.textContent = `${cantidad} Pesos son ${operacion} Dolares`;\r\n            } else {\r\n                operacion = cantidad * precio;\r\n                resultado.textContent = `${cantidad} Dolares son ${operacion} Pesos`;                \r\n            }\r\n\r\n            const conteResultado = document.querySelector('.resultado');\r\n            conteResultado.style.display = 'block';\r\n\r\n            eliminarResultado = () => {\r\n                conteResultado.style.display = 'none';\r\n                document.querySelector('#moneda').value = '';\r\n                const opciones = document.querySelector('#convertidorOpciones');\r\n                opciones.options[0].selected = true; \r\n\r\n            }\r\n\r\n            setTimeout(eliminarResultado,5000);\r\n        } else {\r\n            const contenedorErrores = document.querySelector('.contenedorErrores');\r\n            for(let i =0; i<errores.length; i++) {\r\n                let p = document.createElement(\"P\");\r\n                p.classList.add('error');\r\n                p.textContent = errores[i];\r\n                contenedorErrores.appendChild(p);\r\n            }\r\n\r\n            contenedorErrores.style.display = \"block\";\r\n            eliminarErrores = () => {\r\n                document.querySelector('#moneda').value = '';\r\n                const opciones = document.querySelector('#convertidorOpciones');\r\n                opciones.options[0].selected = true; \r\n                contenedorErrores.innerHTML = \"\";\r\n                contenedorErrores.style.display = \"none\";\r\n            }\r\n\r\n            setTimeout(eliminarErrores, 6000);\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction comprobarNombres(cotizacion) {\r\n    if(cotizacion.nombre !== \"Dolar Soja\" && cotizacion.nombre !== \"Bitcoin\" && cotizacion.nombre !== \"Argentina\") {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction mostrarDatos(cotizaciones) {\r\n    const datos = cotizaciones.obtenerCotizaciones().filter(comprobarNombres);\r\n\r\n    console.log(datos);\r\n    datos.forEach( (element, index) => {\r\n        let bloque = document.createElement('DIV');\r\n        let titulo = document.createElement('H2');\r\n        let contenido = document.createElement('DIV');\r\n        let compra = document.createElement('P');\r\n        let venta = document.createElement('P');\r\n\r\n        let nombre = element.nombre;\r\n\r\n        if(nombre === \"Dolar Contado con Liqui\") {\r\n            nombre = \"Dolar CCL\";\r\n        }\r\n\r\n        titulo.classList.add('bloque__titulo');\r\n        titulo.textContent = nombre;\r\n\r\n        /*\r\n        precioFormateado = Number(precio).toLocaleString('es-AR', {\r\n            style: 'currency',\r\n            currency: 'ARS'          \r\n        })   */\r\n\r\n        let precioCompra = `$ ${element.precio_compra}`;\r\n        let precioVenta = `$ ${element.precio_venta}`;\r\n\r\n        nombre = nombre.replace(/ /g,'');\r\n        venta.id = nombre.toLowerCase(); \r\n        compra.innerHTML = `Compra <span class=\"bloque__precio\"> ${precioCompra}</span>`;\r\n        venta.innerHTML = `Venta <span class=\"bloque__precio\"> ${precioVenta} </span>`;\r\n\r\n        contenido.classList.add('bloque__contenido');\r\n        contenido.appendChild(compra);\r\n        contenido.appendChild(venta);\r\n\r\n        bloque.classList.add('bloque');\r\n\r\n        bloque.appendChild(titulo);\r\n        bloque.appendChild(contenido);\r\n\r\n        document.querySelector('.bloques').appendChild(bloque);\r\n\r\n        \r\n    });\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    darkMode();\r\n    try {\r\n        await procesadarDatos(cotizaciones);  \r\n        mostrarDatos(cotizaciones);\r\n        calculadora();   \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n});\r\n\r\n"]}